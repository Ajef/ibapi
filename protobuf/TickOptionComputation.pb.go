// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: TickOptionComputation.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TickOptionComputation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReqId         *int32                 `protobuf:"varint,1,opt,name=reqId,proto3,oneof" json:"reqId,omitempty"`
	TickType      *int32                 `protobuf:"varint,2,opt,name=tickType,proto3,oneof" json:"tickType,omitempty"`
	TickAttrib    *int32                 `protobuf:"varint,3,opt,name=tickAttrib,proto3,oneof" json:"tickAttrib,omitempty"`
	ImpliedVol    *float64               `protobuf:"fixed64,4,opt,name=impliedVol,proto3,oneof" json:"impliedVol,omitempty"`
	Delta         *float64               `protobuf:"fixed64,5,opt,name=delta,proto3,oneof" json:"delta,omitempty"`
	OptPrice      *float64               `protobuf:"fixed64,6,opt,name=optPrice,proto3,oneof" json:"optPrice,omitempty"`
	PvDividend    *float64               `protobuf:"fixed64,7,opt,name=pvDividend,proto3,oneof" json:"pvDividend,omitempty"`
	Gamma         *float64               `protobuf:"fixed64,8,opt,name=gamma,proto3,oneof" json:"gamma,omitempty"`
	Vega          *float64               `protobuf:"fixed64,9,opt,name=vega,proto3,oneof" json:"vega,omitempty"`
	Theta         *float64               `protobuf:"fixed64,10,opt,name=theta,proto3,oneof" json:"theta,omitempty"`
	UndPrice      *float64               `protobuf:"fixed64,11,opt,name=undPrice,proto3,oneof" json:"undPrice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickOptionComputation) Reset() {
	*x = TickOptionComputation{}
	mi := &file_TickOptionComputation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickOptionComputation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickOptionComputation) ProtoMessage() {}

func (x *TickOptionComputation) ProtoReflect() protoreflect.Message {
	mi := &file_TickOptionComputation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickOptionComputation.ProtoReflect.Descriptor instead.
func (*TickOptionComputation) Descriptor() ([]byte, []int) {
	return file_TickOptionComputation_proto_rawDescGZIP(), []int{0}
}

func (x *TickOptionComputation) GetReqId() int32 {
	if x != nil && x.ReqId != nil {
		return *x.ReqId
	}
	return 0
}

func (x *TickOptionComputation) GetTickType() int32 {
	if x != nil && x.TickType != nil {
		return *x.TickType
	}
	return 0
}

func (x *TickOptionComputation) GetTickAttrib() int32 {
	if x != nil && x.TickAttrib != nil {
		return *x.TickAttrib
	}
	return 0
}

func (x *TickOptionComputation) GetImpliedVol() float64 {
	if x != nil && x.ImpliedVol != nil {
		return *x.ImpliedVol
	}
	return 0
}

func (x *TickOptionComputation) GetDelta() float64 {
	if x != nil && x.Delta != nil {
		return *x.Delta
	}
	return 0
}

func (x *TickOptionComputation) GetOptPrice() float64 {
	if x != nil && x.OptPrice != nil {
		return *x.OptPrice
	}
	return 0
}

func (x *TickOptionComputation) GetPvDividend() float64 {
	if x != nil && x.PvDividend != nil {
		return *x.PvDividend
	}
	return 0
}

func (x *TickOptionComputation) GetGamma() float64 {
	if x != nil && x.Gamma != nil {
		return *x.Gamma
	}
	return 0
}

func (x *TickOptionComputation) GetVega() float64 {
	if x != nil && x.Vega != nil {
		return *x.Vega
	}
	return 0
}

func (x *TickOptionComputation) GetTheta() float64 {
	if x != nil && x.Theta != nil {
		return *x.Theta
	}
	return 0
}

func (x *TickOptionComputation) GetUndPrice() float64 {
	if x != nil && x.UndPrice != nil {
		return *x.UndPrice
	}
	return 0
}

var File_TickOptionComputation_proto protoreflect.FileDescriptor

var file_TickOptionComputation_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0xf3, 0x03, 0x0a, 0x15, 0x54, 0x69, 0x63, 0x6b,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x74, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x74, 0x69, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x02, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x56, 0x6f, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x56, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x76, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x0a, 0x70, 0x76, 0x44, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x6d,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x6d, 0x61,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x76, 0x65, 0x67, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x08, 0x52, 0x04, 0x76, 0x65, 0x67, 0x61, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x74, 0x68, 0x65, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x05, 0x74,
	0x68, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x6e, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x08, 0x75, 0x6e, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x72, 0x65, 0x71,
	0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x70, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x76, 0x44, 0x69, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x76, 0x65, 0x67, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x68, 0x65, 0x74, 0x61,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_TickOptionComputation_proto_rawDescOnce sync.Once
	file_TickOptionComputation_proto_rawDescData []byte
)

func file_TickOptionComputation_proto_rawDescGZIP() []byte {
	file_TickOptionComputation_proto_rawDescOnce.Do(func() {
		file_TickOptionComputation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_TickOptionComputation_proto_rawDesc), len(file_TickOptionComputation_proto_rawDesc)))
	})
	return file_TickOptionComputation_proto_rawDescData
}

var file_TickOptionComputation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_TickOptionComputation_proto_goTypes = []any{
	(*TickOptionComputation)(nil), // 0: protobuf.TickOptionComputation
}
var file_TickOptionComputation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_TickOptionComputation_proto_init() }
func file_TickOptionComputation_proto_init() {
	if File_TickOptionComputation_proto != nil {
		return
	}
	file_TickOptionComputation_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_TickOptionComputation_proto_rawDesc), len(file_TickOptionComputation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TickOptionComputation_proto_goTypes,
		DependencyIndexes: file_TickOptionComputation_proto_depIdxs,
		MessageInfos:      file_TickOptionComputation_proto_msgTypes,
	}.Build()
	File_TickOptionComputation_proto = out.File
	file_TickOptionComputation_proto_goTypes = nil
	file_TickOptionComputation_proto_depIdxs = nil
}

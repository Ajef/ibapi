// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: OrderAllocation.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderAllocation struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Account         *string                `protobuf:"bytes,1,opt,name=account,proto3,oneof" json:"account,omitempty"`
	Position        *string                `protobuf:"bytes,2,opt,name=position,proto3,oneof" json:"position,omitempty"`
	PositionDesired *string                `protobuf:"bytes,3,opt,name=positionDesired,proto3,oneof" json:"positionDesired,omitempty"`
	PositionAfter   *string                `protobuf:"bytes,4,opt,name=positionAfter,proto3,oneof" json:"positionAfter,omitempty"`
	DesiredAllocQty *string                `protobuf:"bytes,5,opt,name=desiredAllocQty,proto3,oneof" json:"desiredAllocQty,omitempty"`
	AllowedAllocQty *string                `protobuf:"bytes,6,opt,name=allowedAllocQty,proto3,oneof" json:"allowedAllocQty,omitempty"`
	IsMonetary      *bool                  `protobuf:"varint,7,opt,name=isMonetary,proto3,oneof" json:"isMonetary,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OrderAllocation) Reset() {
	*x = OrderAllocation{}
	mi := &file_OrderAllocation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAllocation) ProtoMessage() {}

func (x *OrderAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_OrderAllocation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAllocation.ProtoReflect.Descriptor instead.
func (*OrderAllocation) Descriptor() ([]byte, []int) {
	return file_OrderAllocation_proto_rawDescGZIP(), []int{0}
}

func (x *OrderAllocation) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *OrderAllocation) GetPosition() string {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return ""
}

func (x *OrderAllocation) GetPositionDesired() string {
	if x != nil && x.PositionDesired != nil {
		return *x.PositionDesired
	}
	return ""
}

func (x *OrderAllocation) GetPositionAfter() string {
	if x != nil && x.PositionAfter != nil {
		return *x.PositionAfter
	}
	return ""
}

func (x *OrderAllocation) GetDesiredAllocQty() string {
	if x != nil && x.DesiredAllocQty != nil {
		return *x.DesiredAllocQty
	}
	return ""
}

func (x *OrderAllocation) GetAllowedAllocQty() string {
	if x != nil && x.AllowedAllocQty != nil {
		return *x.AllowedAllocQty
	}
	return ""
}

func (x *OrderAllocation) GetIsMonetary() bool {
	if x != nil && x.IsMonetary != nil {
		return *x.IsMonetary
	}
	return false
}

var File_OrderAllocation_proto protoreflect.FileDescriptor

var file_OrderAllocation_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x22, 0xa4, 0x03, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x51,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d,
	0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x51, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x69, 0x73, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x06, 0x52, 0x0a, 0x69, 0x73, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x51, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x51, 0x74, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x73,
	0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_OrderAllocation_proto_rawDescOnce sync.Once
	file_OrderAllocation_proto_rawDescData []byte
)

func file_OrderAllocation_proto_rawDescGZIP() []byte {
	file_OrderAllocation_proto_rawDescOnce.Do(func() {
		file_OrderAllocation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_OrderAllocation_proto_rawDesc), len(file_OrderAllocation_proto_rawDesc)))
	})
	return file_OrderAllocation_proto_rawDescData
}

var file_OrderAllocation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_OrderAllocation_proto_goTypes = []any{
	(*OrderAllocation)(nil), // 0: protobuf.OrderAllocation
}
var file_OrderAllocation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_OrderAllocation_proto_init() }
func file_OrderAllocation_proto_init() {
	if File_OrderAllocation_proto != nil {
		return
	}
	file_OrderAllocation_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_OrderAllocation_proto_rawDesc), len(file_OrderAllocation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_OrderAllocation_proto_goTypes,
		DependencyIndexes: file_OrderAllocation_proto_depIdxs,
		MessageInfos:      file_OrderAllocation_proto_msgTypes,
	}.Build()
	File_OrderAllocation_proto = out.File
	file_OrderAllocation_proto_goTypes = nil
	file_OrderAllocation_proto_depIdxs = nil
}

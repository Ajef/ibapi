// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: RealTimeBarTick.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RealTimeBarTick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReqId         *int32                 `protobuf:"varint,1,opt,name=reqId,proto3,oneof" json:"reqId,omitempty"`
	Time          *int64                 `protobuf:"varint,2,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Open          *float64               `protobuf:"fixed64,3,opt,name=open,proto3,oneof" json:"open,omitempty"`
	High          *float64               `protobuf:"fixed64,4,opt,name=high,proto3,oneof" json:"high,omitempty"`
	Low           *float64               `protobuf:"fixed64,5,opt,name=low,proto3,oneof" json:"low,omitempty"`
	Close         *float64               `protobuf:"fixed64,6,opt,name=close,proto3,oneof" json:"close,omitempty"`
	Volume        *string                `protobuf:"bytes,7,opt,name=volume,proto3,oneof" json:"volume,omitempty"`
	WAP           *string                `protobuf:"bytes,8,opt,name=WAP,proto3,oneof" json:"WAP,omitempty"`
	Count         *int32                 `protobuf:"varint,9,opt,name=count,proto3,oneof" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RealTimeBarTick) Reset() {
	*x = RealTimeBarTick{}
	mi := &file_RealTimeBarTick_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealTimeBarTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealTimeBarTick) ProtoMessage() {}

func (x *RealTimeBarTick) ProtoReflect() protoreflect.Message {
	mi := &file_RealTimeBarTick_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealTimeBarTick.ProtoReflect.Descriptor instead.
func (*RealTimeBarTick) Descriptor() ([]byte, []int) {
	return file_RealTimeBarTick_proto_rawDescGZIP(), []int{0}
}

func (x *RealTimeBarTick) GetReqId() int32 {
	if x != nil && x.ReqId != nil {
		return *x.ReqId
	}
	return 0
}

func (x *RealTimeBarTick) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *RealTimeBarTick) GetOpen() float64 {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return 0
}

func (x *RealTimeBarTick) GetHigh() float64 {
	if x != nil && x.High != nil {
		return *x.High
	}
	return 0
}

func (x *RealTimeBarTick) GetLow() float64 {
	if x != nil && x.Low != nil {
		return *x.Low
	}
	return 0
}

func (x *RealTimeBarTick) GetClose() float64 {
	if x != nil && x.Close != nil {
		return *x.Close
	}
	return 0
}

func (x *RealTimeBarTick) GetVolume() string {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return ""
}

func (x *RealTimeBarTick) GetWAP() string {
	if x != nil && x.WAP != nil {
		return *x.WAP
	}
	return ""
}

func (x *RealTimeBarTick) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

var File_RealTimeBarTick_proto protoreflect.FileDescriptor

var file_RealTimeBarTick_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x61, 0x72, 0x54, 0x69, 0x63,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x22, 0xcc, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x61,
	0x72, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x03, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c,
	0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x57, 0x41,
	0x50, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x03, 0x57, 0x41, 0x50, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x08, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x72, 0x65, 0x71, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x69, 0x67,
	0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x6f, 0x77, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x57, 0x41, 0x50, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_RealTimeBarTick_proto_rawDescOnce sync.Once
	file_RealTimeBarTick_proto_rawDescData []byte
)

func file_RealTimeBarTick_proto_rawDescGZIP() []byte {
	file_RealTimeBarTick_proto_rawDescOnce.Do(func() {
		file_RealTimeBarTick_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_RealTimeBarTick_proto_rawDesc), len(file_RealTimeBarTick_proto_rawDesc)))
	})
	return file_RealTimeBarTick_proto_rawDescData
}

var file_RealTimeBarTick_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_RealTimeBarTick_proto_goTypes = []any{
	(*RealTimeBarTick)(nil), // 0: protobuf.RealTimeBarTick
}
var file_RealTimeBarTick_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_RealTimeBarTick_proto_init() }
func file_RealTimeBarTick_proto_init() {
	if File_RealTimeBarTick_proto != nil {
		return
	}
	file_RealTimeBarTick_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_RealTimeBarTick_proto_rawDesc), len(file_RealTimeBarTick_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_RealTimeBarTick_proto_goTypes,
		DependencyIndexes: file_RealTimeBarTick_proto_depIdxs,
		MessageInfos:      file_RealTimeBarTick_proto_msgTypes,
	}.Build()
	File_RealTimeBarTick_proto = out.File
	file_RealTimeBarTick_proto_goTypes = nil
	file_RealTimeBarTick_proto_depIdxs = nil
}
